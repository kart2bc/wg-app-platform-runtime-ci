#@ load("@ytt:data", "data")
#@ load("ytt-helpers.star", "helpers")

#! Define-Groups
groups:
- name: release
  jobs:
  - unit-and-integration-tests






#! Define-ResourceGroups
resource_types:
- name: gcs
  type: registry-image
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/frodenas/gcs-resource
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))

- name: command-runner
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundrydevelopers/command-runner-resource
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

- name: slack-notification
  type: docker-image
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cfcommunity/slack-notification-resource
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

- name: fork-pool
  type: registry-image
  source:
    repository: ebroberson/pool-resource

#! Define-Resources
resources:
- name: golang-release-latest
  type: git
  icon: tag-outline
  source:
    tag_filter: v*
    uri: https://github.com/bosh-packages/golang-release.git

- name: repo
  type: git
  icon: source-branch
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/garden-runc-release.git
    private_key: ((github-appruntimeplatform-bot/private-key))
    ignore_paths:
    - .github/
    - .gitignore
    - CODEOWNERS
    - LICENSE
    - NOTICE
    - README.md
    - docs/

#! repo-synced is a write-only resource to prevent readme
#! changes from triggering pipeline runs. See the description of "ignore_path"
#! here for more info: https://github.com/concourse/git-resource
- name: repo-synced
  type: git
  icon: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/garden-runc-release.git
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: release-branch
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/garden-runc-release.git
    branch: release
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: develop-branch-mergeback
  type: git
  icon: source-branch
  source:
    uri: git@github.com:cloudfoundry/garden-runc-release.git
    branch: develop
    private_key: ((github-appruntimeplatform-bot/private-key))

- name: ci
  type: git
  icon: source-branch
  source:
    branch: main
    uri: https://github.com/cloudfoundry/wg-app-platform-runtime-ci











#@ for repo in helpers.packages_with_a_git_repo(data.values.internal_repos):
- name: #@ "{}-repo".format(repo.name)
  type: git
  icon: source-branch
  source:
    branch: main
    uri: #@ "git@github.com:cloudfoundry/{}.git".format(repo.name)
    private_key: ((github-appruntimeplatform-bot/private-key))
#@ end




- name: image
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundry/tas-runtime-build
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

- name: garden-runc-release-rootfs
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundry/garden-rootfs
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest

- name: garden-runc-release-fuse-rootfs
  type: registry-image
  icon: docker
  source:
    repository: us-central1-docker.pkg.dev/app-runtime-platform-wg/dockerhub-mirror/cloudfoundry/garden-fuse
    username: _json_key
    password: ((gcp-arp-artifact-registry-service-account-token))
    tag: latest




#! Define-Jobs





jobs:

- name: unit-and-integration-tests
  serial: true
  plan:
  - in_parallel:
    - get: ci
    - get: repo
      trigger: true
    - get: image
    - get: package-release
      resource: golang-release-latest
    - get: garden-runc-release-rootfs
      params:
        format: rootfs
    - get: garden-runc-release-fuse-rootfs
      params:
        format: rootfs
  - task: determine-image-tag
    image: image
    file: ci/shared/tasks/determine-image-tag/linux.yml
  - load_var: image_tag
    file: determined-image-tag/tag
  - in_parallel:
    - task: build-binaries
      file: ci/shared/tasks/build-binaries/linux.yml
      params:
        DEFAULT_PARAMS: "ci/garden-runc-release/default-params/build-binaries/linux.yml"
      vars:
        image_repository: cloudfoundry/tas-runtime-build
        image_password: ((gcp-arp-artifact-registry-service-account-token))
        image_tag: ((.:image_tag))
  - put: windows-worker-lock
    params:
      acquire: true
  - task: start-windows-worker
    image: image
    file: ci/shared/tasks/bosh-start/linux.yml
    params:
      DEPLOYMENT: windows-worker
      INSTANCE_GROUP: windows-worker
      BOSH_CREDS: ((bosh-concourse-credentials/env_vars))
  - in_parallel:
#@ for repo in data.values.internal_repos:
    - task: #@ "{}".format(repo.name)
      privileged: #@ helpers.privileged(repo)
      file: ci/shared/tasks/run-bin-test/linux.yml
      vars:
        image_repository: cloudfoundry/tas-runtime-build
        image_password: ((gcp-arp-artifact-registry-service-account-token))
        image_tag: ((.:image_tag))
      input_mapping:
        input-01: garden-runc-release-rootfs
        input-02: garden-runc-release-fuse-rootfs
      params:
        ENVS: |
          DOCKER_REGISTRY_USERNAME=((dockerhub-appruntimeplatform-username))
          DOCKER_REGISTRY_PASSWORD=((dockerhub-appruntimeplatform-password))
          GARDEN_TEST_ROOTFS=$PWD/input-01/rootfs
          GARDEN_FUSE_TEST_ROOTFS=$PWD/input-02/rootfs
        DIR: #@ "src/{}".format(repo.name)
    - task: #@ "{}-cgroupsv2".format(repo.name)
      tags: [ diego-cgroupsv2 ]
      privileged: #@ helpers.privileged(repo)
      file: ci/shared/tasks/run-bin-test/linux.yml
      vars:
        image_repository: cloudfoundry/tas-runtime-build
        image_password: ((gcp-arp-artifact-registry-service-account-token))
        image_tag: ((.:image_tag))
      input_mapping:
        input-01: garden-runc-release-rootfs
        input-02: garden-runc-release-fuse-rootfs
      params:
        ENVS: |
          DOCKER_REGISTRY_USERNAME=((dockerhub-appruntimeplatform-username))
          DOCKER_REGISTRY_PASSWORD=((dockerhub-appruntimeplatform-password))
          GARDEN_TEST_ROOTFS=$PWD/input-01/rootfs
          GARDEN_FUSE_TEST_ROOTFS=$PWD/input-02/rootfs
        DIR: #@ "src/{}".format(repo.name)
#@ if helpers.on_windows(repo):
    - task: #@ "{}-windows".format(repo.name)
      file: ci/shared/tasks/run-bin-test/windows.yml
      privileged: #@ helpers.privileged(repo)
      params:
        DIR: #@ "src/{}".format(repo.name)
#@ end
#@ end
  ensure:
    task: stop-windows-worker
    image: image
    file: ci/shared/tasks/bosh-stop/linux.yml
    params:
      DEPLOYMENT: windows-worker
      INSTANCE_GROUP: windows-worker
      BOSH_CREDS: ((bosh-concourse-credentials/env_vars))
    ensure:
      put: windows-worker-lock
      inputs: detect
      params:
        release: windows-worker-lock
 